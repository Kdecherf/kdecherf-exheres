Source: https://github.com/neomutt/neomutt/pull/1974
Upstream: yes, pending release
Reason: Flashing screen

From 36f9a7362acb1486923f07ce5555c243f119e5ca Mon Sep 17 00:00:00 2001
From: Richard Russon <rich@flatcap.org>
Date: Mon, 18 Nov 2019 15:04:46 +0000
Subject: [PATCH] Revert "refactor: clearok() to mutt_window_clear_screen()"

This reverts commit 82e89dcefaa2689fa469f313f398c8bccc214140.
---
 curs_lib.c    | 10 +++++-----
 enter.c       |  2 +-
 index.c       | 10 +++++-----
 menu.c        | 11 +++++++----
 mutt_window.c | 11 -----------
 mutt_window.h |  1 -
 pager.c       |  8 +++++---
 7 files changed, 23 insertions(+), 30 deletions(-)

diff --git a/curs_lib.c b/curs_lib.c
index 25c5f020b..bfab03b45 100644
--- a/curs_lib.c
+++ b/curs_lib.c
@@ -127,7 +127,7 @@ void mutt_refresh(void)
 void mutt_need_hard_redraw(void)
 {
   keypad(stdscr, true);
-  mutt_window_clear_screen();
+  clearok(stdscr, true);
   mutt_menu_set_current_redraw_full();
 }
 
@@ -267,7 +267,7 @@ int mutt_buffer_get_field_full(const char *field, struct Buffer *buf, Completion
     {
       SigWinch = 0;
       mutt_resize_screen();
-      mutt_window_clear_screen();
+      clearok(stdscr, true);
       mutt_menu_current_redraw();
     }
     mutt_window_clearline(MuttMessageWindow, 0);
@@ -361,7 +361,7 @@ void mutt_edit_file(const char *editor, const char *file)
   /* the terminal may have been resized while the editor owned it */
   mutt_resize_screen();
   keypad(stdscr, true);
-  mutt_window_clear_screen();
+  clearok(stdscr, true);
 
   mutt_buffer_pool_release(&cmd);
 }
@@ -413,7 +413,7 @@ enum QuadOption mutt_yesorno(const char *msg, enum QuadOption def)
       {
         SigWinch = 0;
         mutt_resize_screen();
-        mutt_window_clear_screen();
+        clearok(stdscr, true);
         mutt_menu_current_redraw();
       }
       if (MuttMessageWindow->cols)
@@ -878,7 +878,7 @@ int mutt_multi_choice(const char *prompt, const char *letters)
       {
         SigWinch = 0;
         mutt_resize_screen();
-        mutt_window_clear_screen();
+        clearok(stdscr, true);
         mutt_menu_current_redraw();
       }
       if (MuttMessageWindow->cols)
diff --git a/enter.c b/enter.c
index 702ee3cc4..40c743fa4 100644
--- a/enter.c
+++ b/enter.c
@@ -153,7 +153,7 @@ int mutt_enter_string(char *buf, size_t buflen, int col, CompletionFlags flags)
     {
       SigWinch = 0;
       mutt_resize_screen();
-      mutt_window_clear_screen();
+      clearok(stdscr, true);
     }
     rc = mutt_enter_string_full(buf, buflen, col, flags, false, NULL, NULL, es);
   } while (rc == 1);
diff --git a/index.c b/index.c
index bd684411c..efa938e7b 100644
--- a/index.c
+++ b/index.c
@@ -883,9 +883,6 @@ int index_color(int line)
  */
 void mutt_draw_statusline(int cols, const char *buf, size_t buflen)
 {
-  if (!buf)
-    return;
-
   size_t i = 0;
   size_t offset = 0;
   bool found = false;
@@ -899,6 +896,9 @@ void mutt_draw_statusline(int cols, const char *buf, size_t buflen)
     int last;
   } *syntax = NULL;
 
+  if (!buf || !stdscr)
+    return;
+
   do
   {
     struct ColorLine *cl = NULL;
@@ -1271,7 +1271,7 @@ int mutt_index_menu(void)
         menu->top = 0; /* so we scroll the right amount */
         /* force a real complete redraw.  clrtobot() doesn't seem to be able
          * to handle every case without this.  */
-        mutt_window_clear_screen();
+        clearok(stdscr, true);
         continue;
       }
 
@@ -1777,7 +1777,7 @@ int mutt_index_menu(void)
         break;
 
       case OP_REDRAW:
-        mutt_window_clear_screen();
+        clearok(stdscr, true);
         menu->redraw = REDRAW_FULL;
         break;
 
diff --git a/menu.c b/menu.c
index 565f4beb6..cf74fa021 100644
--- a/menu.c
+++ b/menu.c
@@ -358,7 +358,9 @@ static void menu_pad_string(struct Menu *menu, char *buf, size_t buflen)
 void menu_redraw_full(struct Menu *menu)
 {
   mutt_curses_set_color(MT_COLOR_NORMAL);
-  mutt_window_clear_screen();
+  /* clear() doesn't optimize screen redraws */
+  mutt_window_move_abs(0, 0);
+  mutt_window_clrtobot();
 
   if (C_Help)
   {
@@ -1080,7 +1082,8 @@ void mutt_menu_pop_current(struct Menu *menu)
   else
   {
     CurrentMenu = MENU_MAIN;
-    mutt_window_clear_screen();
+    mutt_window_move_abs(0, 0);
+    mutt_window_clrtobot();
   }
 }
 
@@ -1432,7 +1435,7 @@ int mutt_menu_loop(struct Menu *menu)
     {
       SigWinch = 0;
       mutt_resize_screen();
-      mutt_window_clear_screen();
+      clearok(stdscr, true); /* force complete redraw */
     }
 
     if (i < 0)
@@ -1568,7 +1571,7 @@ int mutt_menu_loop(struct Menu *menu)
         break;
 
       case OP_REDRAW:
-        mutt_window_clear_screen();
+        clearok(stdscr, true);
         menu->redraw = REDRAW_FULL;
         break;
 
diff --git a/mutt_window.c b/mutt_window.c
index 7bed66f2a..1e11a00b8 100644
--- a/mutt_window.c
+++ b/mutt_window.c
@@ -430,14 +430,3 @@ int mutt_window_printf(const char *fmt, ...)
 
   return rc;
 }
-
-/**
- * mutt_window_clear_screen - Clear the entire screen
- */
-void mutt_window_clear_screen(void)
-{
-  clearok(stdscr, true);
-  move(0, 0);
-  clrtobot();
-  refresh();
-}
diff --git a/mutt_window.h b/mutt_window.h
index 483c3cc07..51396e39b 100644
--- a/mutt_window.h
+++ b/mutt_window.h
@@ -61,7 +61,6 @@ int                mutt_window_wrap_cols          (int width, short wrap);
 int  mutt_window_addch    (int ch);
 int  mutt_window_addnstr  (const char *str, int num);
 int  mutt_window_addstr   (const char *str);
-void mutt_window_clear_screen(void);
 void mutt_window_clearline(struct MuttWindow *win, int row);
 void mutt_window_clrtobot (void);
 void mutt_window_clrtoeol (struct MuttWindow *win);
diff --git a/pager.c b/pager.c
index 4564cdb30..4e4ddf8b3 100644
--- a/pager.c
+++ b/pager.c
@@ -1947,7 +1947,9 @@ static void pager_custom_redraw(struct Menu *pager_menu)
   if (pager_menu->redraw & REDRAW_FULL)
   {
     mutt_curses_set_color(MT_COLOR_NORMAL);
-    mutt_window_clear_screen();
+    /* clear() doesn't optimize screen redraws */
+    mutt_window_move_abs(0, 0);
+    mutt_window_clrtobot();
 
     if (IsEmail(rd->extra) && Context && ((Context->mailbox->vcount + 1) < C_PagerIndexLines))
       rd->indexlen = Context->mailbox->vcount + 1;
@@ -2463,7 +2465,7 @@ int mutt_pager(const char *banner, const char *fname, PagerFlags flags, struct P
     {
       SigWinch = 0;
       mutt_resize_screen();
-      mutt_window_clear_screen();
+      clearok(stdscr, true); /* force complete redraw */
 
       if (flags & MUTT_PAGER_RETWINCH)
       {
@@ -2935,7 +2937,7 @@ int mutt_pager(const char *banner, const char *fname, PagerFlags flags, struct P
         break;
 
       case OP_REDRAW:
-        mutt_window_clear_screen();
+        clearok(stdscr, true);
         pager_menu->redraw = REDRAW_FULL;
         break;
 
